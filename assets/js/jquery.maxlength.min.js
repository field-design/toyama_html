/*
  @author: remy sharp / http://remysharp.com
  @params:
    feedback - the selector for the element that gives the user feedback. Note that this will be relative to the form the plugin is run against.
    hardLimit - whether to stop the user being able to keep adding characters. Defaults to true.
    useInput - whether to look for a hidden input named 'maxlength' instead of the maxlength attribute. Defaults to false.
    words - limit by characters or words, set this to true to limit by words. Defaults to false.
  @license: Creative Commons License - ShareAlike http://creativecommons.org/licenses/by-sa/3.0/
  @version: 1.2
  @changes: code tidy via Ariel Flesler and fix when pasting over limit and including \t or \n
*/
!function($){$.fn.maxlength=function(e){function t(t){var a=t.value;return e.words&&(a=t.value.length?a.split(/\s+/):{length:0}),a.length}return"string"==typeof e&&(e={feedback:e}),e=$.extend({},$.fn.maxlength.defaults,e),this.each(function(){function a(a){var n=t(this),s=n>=r,u=a.keyCode;if(s)switch(u){case 8:case 9:case 17:case 36:case 35:case 37:case 38:case 39:case 40:case 46:case 65:return;default:return e.words&&32!=u&&13!=u&&n==r}}var n=this,s=$(n),u=$(n.form),r=e.useInput?u.find("input[name=maxlength]").val():s.attr("maxlength"),c=u.find(e.feedback),i=function(){var a=t(n),s=r-a;c.html(s||"0"),e.hardLimit&&s<0&&(n.value=e.words?n.value.split(/(\s+)/,2*r-1).join(""):n.value.substr(0,r),i())};s.keyup(i).change(i),e.hardLimit&&s.keydown(a),i()})},$.fn.maxlength.defaults={useInput:!1,hardLimit:!0,feedback:".charsLeft",words:!1}}(jQuery);